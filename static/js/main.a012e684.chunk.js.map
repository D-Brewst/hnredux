{"version":3,"sources":["services/news.js","services/historySlice.js","components/Search.js","components/History.js","components/Nav.js","App.js","app/store.js","index.js"],"names":["hnApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getArticles","query","term","useGetArticlesQuery","historySlice","createSlice","name","initialState","reducers","addTerm","state","action","push","actions","Search","useState","setTerm","dispatch","useDispatch","data","isFetching","results","hits","console","log","onSubmit","e","preventDefault","word","target","value","trim","type","placeholder","defaultValue","className","style","display","map","article","url","title","href","objectID","History","history","useSelector","length","index","payload","Nav","to","App","exact","path","reducer","combineReducers","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAEaA,EAAQC,YAAU,CAC7BC,YAAa,QACbC,UAAWC,YAAe,CAAEC,QAAS,gDACrCC,UAAW,SAACC,GAAD,MAAc,CACvBC,YAAaD,EAAQE,MAAM,CACzBA,MAAO,SAACC,GAAD,OAAUA,SAKRC,EAAwBX,EAAxBW,oB,OCRTC,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAJmB,GAKnBC,SAAU,CACRC,QADQ,SACAC,EAAOC,GACbD,EAAME,KAAKD,OAKFF,EAAYL,EAAaS,QAAzBJ,QACAL,IAAf,Q,cC4CeU,EAtDA,WACX,MAAwBC,mBAAS,MAAjC,mBAAOb,EAAP,KAAac,EAAb,KAEMC,EAAWC,cAEjB,EAA2Bf,EAAoBD,GAAxCiB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,WAWPC,EAAO,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMG,KAEtB,OAAGF,EAAmB,WAEtBG,QAAQC,IAAIH,GAGR,gCACI,mFACA,uBAAMI,SAlBO,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAAO,GAAGC,MAAMC,OAC/Bf,EAAQY,GACLA,GACCX,EAASR,EAAQmB,KAajB,UACI,uBACAI,KAAK,OACL1B,KAAK,OACL2B,YAAY,SACZC,aAAchC,IAEd,8BACI,wBAAQiC,UAAU,aAAaH,KAAK,SAApC,yBAGR,mBAAGI,MAAO,CAACC,QAAkB,KAATnC,EAAc,QAAU,QAA5C,yCACA,qBAAKkC,MAAO,CAACC,QAAkB,KAATnC,EAAc,OAAS,SAA7C,SACI,6BACKmB,EACGA,EAAQiB,KAAI,SAACC,GAAD,OACR,oBAAIH,MAAO,CAACC,QAASE,EAAQC,KAAOD,EAAQE,MAAQ,QAAU,QAA9D,SACI,mBAAGC,KAAMH,EAAQC,IAAjB,SAAuBD,EAAQE,SAD0CF,EAAQI,aAKzF,iCCjCTC,EAfC,WACZ,IAAMC,EAAUC,aAAY,SAAApC,GAAK,OAAIA,EAAMmC,WAE3C,OACI,gCACI,sDACA,6BACKA,EAAQE,OAASF,EAAQP,KAAI,SAACpC,EAAM8C,GAAP,OAC1B,6BAAiB9C,EAAK+C,SAAbD,MACR,sF,QCMNE,EAfH,WACR,OACI,qBAAKf,UAAU,MAAf,SACI,+BACI,oBAAIA,UAAU,YAAd,SACI,cAAC,IAAD,CAAMgB,GAAG,UAAT,sBAEJ,oBAAIhB,UAAU,YAAd,SACI,cAAC,IAAD,CAAMgB,GAAG,WAAT,6B,aCsBLC,MApBf,WAEE,OACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUH,GAAG,qB,gBCtBnBI,EAAUC,YAAgB,aAC5BX,QAASzC,GACRZ,EAAME,YAAcF,EAAM+D,UAGlBE,EAAQC,YAAe,CAClCH,YCJFI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.a012e684.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const hnApi = createApi({\r\n  reducerPath: 'hnApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://hn.algolia.com/api/v1/search?query=' }),\r\n  endpoints: (builder) => ({\r\n    getArticles: builder.query({\r\n      query: (term) => term,\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useGetArticlesQuery } = hnApi;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = [];\r\n\r\nconst historySlice = createSlice({\r\n  name: 'history',\r\n  initialState,\r\n  reducers: {\r\n    addTerm(state, action) {\r\n      state.push(action)\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addTerm } = historySlice.actions;\r\nexport default historySlice.reducer;","import React, { useState } from 'react';\r\nimport { useGetArticlesQuery } from '../services/news';\r\nimport { addTerm } from '../services/historySlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Search = () => {\r\n    const [term, setTerm] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {data, isFetching} = useGetArticlesQuery(term);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const word = e.target[0].value.trim();\r\n        setTerm(word);\r\n        if(word){\r\n            dispatch(addTerm(word));\r\n        }\r\n    }\r\n\r\n    const results = data?.hits;\r\n\r\n    if(isFetching) return \"Loading\";\r\n\r\n    console.log(results);\r\n\r\n    return (\r\n        <div>\r\n            <h3>Enter a search term to see related news articles.</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                type=\"text\"\r\n                name=\"term\"\r\n                placeholder=\"Search\"\r\n                defaultValue={term}\r\n                />\r\n                <div>\r\n                    <button className=\"login__btn\" type=\"submit\">Submit</button>\r\n                </div>\r\n            </form>\r\n            <p style={{display: term === \"\" ? 'block' : 'none' }}>Please enter a search term.</p>\r\n            <div style={{display: term === \"\" ? 'none' : 'block' }}>\r\n                <ul>\r\n                    {results ? (\r\n                        results.map((article) => (\r\n                            <li style={{display: article.url && article.title ? 'block' : 'none' }} key={article.objectID}>\r\n                                <a href={article.url}>{article.title}</a> \r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        <div></div>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst History = () => {\r\n    const history = useSelector(state => state.history)\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Your Search History:</h3>\r\n            <ul>\r\n                {history.length ? history.map((term, index) => (\r\n                    <li key={index}>{term.payload}</li>\r\n                )) : <p>You have not made a search during this session.</p>}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            <ul>\r\n                <li className=\"nav__link\">\r\n                    <Link to=\"/search\">Search</Link>\r\n                </li>\r\n                <li className=\"nav__link\">\r\n                    <Link to=\"/history\">History</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\nimport Search from './components/Search';\nimport History from './components/History';\nimport Nav from './components/Nav';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport './styles.css';\n\nfunction App() {\n\n  return (\n      <Router>\n        <Nav/>\n        <Switch>\n          <Route exact path=\"/search\">\n            <Search/>\n          </Route>\n          <Route exact path=\"/history\">\n            <History/>\n          </Route>\n          <Route exact path=\"*\">\n            <Redirect to=\"/search\" />\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport { hnApi } from '../services/news';\r\nimport historySlice from '../services/historySlice';\r\n\r\nconst reducer = combineReducers({\r\n    history: historySlice,\r\n    [hnApi.reducerPath]: hnApi.reducer\r\n})\r\n\r\nexport const store = configureStore({\r\n  reducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}